01. Kotlin for server Side

01.01. Using Kotlin for Server side Development

- Expressiveness: type-safe builders 와 delegated properties 등을 지원하는 혁신적인 언어 기능은 강력하면서도 사용하기 쉬운 추상화를 구축할 수 있게 함

- Scalability: coroutines 를 지원하여 최소의 하드웨어 요구사항으로 많은 수의 클라이언트로 확장할 수 있는 server-side application 구축 가능

- Interoperability: java 기반 프레임워크와 완벽히 호환되므로 익숙한 기술 스택을 유지하면서도 최신 언어의 이득을 취할 수 있음

- Migration: 거대한 코드베이스를 java 에서 kotlin 으로 migration 하는데 점진적인 방법을 지원함. java 로 된 시스템의 오래된 부분을 유지하면서도 새로운 kotlin 코드를 작성할 수 있음.

- Tooling: 최상의 IDE 지원과 함께 IntelliJ IDEA Ultimate 을 위한 플러그인에서 framework-specific tooling 을 지원

- Learning Curve: Java 개발자가 Kotlin 을 시작하기 쉬움. 자동화된 Java to Kotlin Converter 가 Kotlin Plugin 에 포함돼 있어 처음 시작하는 걸 도움. Kotlin Koans 는 일련의 상호적 연습을 통해 언어의 주요 특징 전반을 알려줌.


01.02. Frameworks for Server-side Develpment with Kotlin

- Spring 은 version 5.0 부터 더욱 간단한 API 들을 사용해 Kotlin 언어의 특징을 제공하고 있음. Online project generator 는 Kotlin 으로 새로운 프로젝트를 빠르게 생성하도록 해줌.

- JVM 상에서 반응형 웹 어플리케이션을 구축하는 프레임워크 Vert.x 는 kotlin 을 위한 dedicated support 를 full documentation 과 함께 제공하고 있음

- Ktor JetBrains 으로 빌드되는 Kotlin-native 웹 프레임워크 Ktor 는 high scalibility 를 위한 coroutines 과 쉽게 사용할 수 있는 관용적 API 를 제공함

- kotlin.html 는 웹 어플리케이션에서 HTML 을 빌드하기 위해 사용되는 DSL. JSP 와 FreeMarker 와 같은 기존 templating 시스템을 대체함.

- JDBC access, JPA, java drivers 를 통한 NoSQL databases 사용까지 포함하는 persistence 를 위한 가능한 옵션들을 제공. JPA 를 위해 kotlin-jpa complier plugin 은 kotlin-complied class 를 framework 의 요구사항으로 적용할 수 있음.

01.03. Deploying Kotlin Server-side Applications

Kotlin applications 는 java web application 을 지원하는 어떠한 호스트에도 deploy 가능함. 이를테면 Amazon Web Services, Google Cloud Platform 등등.

01.04. Users of Kotlin on the Server Side
Corda 는 주요 은행들이 지원하고 있는 오픈 소스 분산 원장 플랫폼이며 kotlin 으로 완벽히 빌드됨.
JetBrains에서 entire license sales, validation process 을 책임지는 시스템, JetBrains Account  는 100% cotlin 으로 작성됐고 2015년 이래로 어떠한 주요 이슈 없이 제품 상에서 돌아가고 있음.

01.05. Next Steps

- Http Serlvet 을 사용한 웹 어플리케이션 생성과 Spring Boot 와 함께 RESTful Web Service 를 생성하는 튜토리얼이 매우 작은 웹 어플리케이션을 Kotlin 상에서 어떻게 빌드하고 실행할 수 있는지 보여줄 것이다.
- 언어에 대한 심도있는 instruction 을 위해 이 사이트와 상의 reference documentation 과 Kotlin Koans 를 확인하라.


02. Kotlin for Android

02.01. Using Kotlin for Android Development

- Compatibillity: Kotlin 은 JDK6 에 완전히 호환되며 Kotlin 어플리케이션은 이전 Android 디바이스에 어떠한 이슈 없이 동작합니다. Kotlin tooling 은 Android Studio 에서 완전히 지원되고 Android Build System 에 호환됩니다.

- Performence: kotlin 어플리케이션은 bytecode 구조와 매우 유사한 덕에 java와 동등한 만큼 빠르게 동작합니다. inline function 지원으로 인해 lamdas 를 사용한 코드는 java 로 작성한 같은 코드보다 더 빠르게 동작할 때도 있습니다.

- Interoperability: Kotlin 은 java 와 완벽히 상호운용될 수 있고 Kotlin 어플리케이션 내에서 이미 존재하는 Android libraries 를 모두 사용할 수 있습니다. annotation processing, databinidng, dagger work 도 역시 지원합니다.

- Footprint: Kotlin 은 매우 compact 한 runtime library 이고 ProGuard 를 사용해 더욱 줄일 수 있습니다. 실제 application 에서 Kotlin runtime 은 단지 수백개 메서드만을 추가하고 .apk 파일의 크기를 100K 아래로 줄입니다.

- Compliation Time: Kotlin 은 efficient incremental compilation 를 지원하며 clean builds 에 대해 추가적인 오버헤드가 있는 반면 incremental builds 는 일반적으로 java 만큼 혹은 더 빠르게 동작합니다.

- Learning Curve: Java 개발자가 Kotlin 을 시작하기 쉬움. 자동화된 Java to Kotlin Converter 가 Kotlin Plugin 에 포함돼 있어 처음 시작하는 걸 도움. Kotlin Koans 는 일련의 상호적 연습을 통해 언어의 주요 특징 전반을 알려줌.

02.02. Kotlin for Android Case Studies
- Pinterest 는  Kotlin 을 매달 150M 사람들이 사용하는 그들의 어플리케이션에 성공적으로 도입했습니다.
- Basecamp 의 Android 앱은 100% Kotlin 코드이고, 그들이 보고하길 프로그래머 행복에서 거대한 차이와 업무 퀄리티, 스피드면에서 최상의 개선이 있었다고 합니다.

- Keepsafe 의 앱 Lock app 은 100% Kotlin 으로 변환됐는데, 소스 라인 수에서 30% 가 감소하고 메소드 개수가 10% 감소됐습니다.

02.03. Tools for Android Development

- Kotlin Android Extensions 는 코드 내의 findViewById() 콜을 제거해주고 synthetic complier-generated propeties 으로 대체할 수 있게 해줍니다.

- Anko 는 layout .xml 파일을 Kotlin 코드를 사용해 대체할 수 있도록 하는 DSL 과 함께 Android APIs 를 감싸는 Kotlin 친화적인 wrappers 의 set 를 제공해줍니다.

02.04. Next Steps

- Android Studio 3.0 을 설치해 포함된 Kotlin support 상자를 풀어보세요
- Getting Started with Android and Kotlin 튜토리얼을 따라 첫 kotlin application 을 만들어보세요.
- 더욱 심도있는 introduction 을 위해 이 사이트 내의 reference documentation 과 Kotlin Koans 를 확인하세요.
- 또다른 훌륭한 리소스는 Kotlin for Android Developers 입니다. 이 책은 당신이 Kotlin 으로 실제 Android application 을 생성하는 프로세스 전반을 step by step 으로 가이드 해줍니다.
- Google 의 sample projects written in Kotlin 을 확인하세요.

03. Kotlin for Javascript

03.01. Kotlin Javascript Overview
Kotlin 은 javascript 을 타켓으로 할 수 있는 기능을 제공합니다. Kotlin 을 Javascript 로 변환하면 됩니다. 현재 구현은 ECMAScript 5.1 을 타겟으로 하고 있지만 결국 ECMAScript 2015 도 타켓으로 할 계획이 있습니다.

Javascript 타겟을 골랐을 때 프로젝트의 부분이든 Kotlin 으로 쌓여진 standard library이든 어떠한 Kotlin 코드도 javasacript 로 변환할 수 있습니다. 다만 JDK 나 어떤 JVM, java framework, 라이브러리를 사용한 것을 제외하고 말입니다. Kotlin 이 아닌 어떤 파일이든 컴파일하는 동안 무시 될 것입니다.

Kotlin 컴파일러는 다음 목적들을 만족하려고 합니다.
- 최적화된 크기의 output 을 제공
- 읽을 수 있는 Javascript 인 output 을 제공
- 이미 존재하는 모듈 시스템과 상호 운용을 제공
- javascript 를 타겟으로 하고 있는지 jvm 을 타겟으로 하고 있는지에 따라 (가능한 최대로) standard library 에서 동일한 기능을 제공

03.02. How can it be used
당신은 다음의 시나리오대로 Kotlin 을 javascript 로 컴파일하기 원합니다.
- Client-side javascript 를 타겟으로 하는 Kotlin 코드 생성
 -> DOM elements 와 상호작용: Kotlin 은 Document Object Model 과 상호작용하기 위해 일련의 static 하게 type 된 interface 를 제공하며, 이를 사용해 DOM elements 생성과 업데이트를 할 수 있습니다.
 -> WebGL과 같은 graphics 와 상호작용: WebGL 을 사용하는 웹페이지 상의 graphical elements 를 생성하기 위해 kotlin 을 사용할 수 있습니다.
- Server-side javascript 를 타겟으로 하는 Kotlin 코드 생성
 -> server-side 기술과 함께 작업: node.js 같은 server-side javascript 와 상호작용하기 위해 Kotlin 을 사용할 수 있습니다.

Kotlin 은 JQuery 나 ReactJS 처럼 이미 존재하는 third-party libraries 와 frameworks 과 함께 사용할 수 있습니다. third-party frameworks 를 strongly-typed API 를 사용해 접근하기 위해서, ts2kt tool 을 사용해 Definitely Type definitions repositiory repositiory 에 있는 TypeScript definitions 를 kotlin 으로 변환할 수 있습니다. 또는 dynamic type 을 사용해 strong typing 없이 어떠한 framework 에도 접근할 수 있습니다.

Kotlin 은 다른 모듈 시스템 간의 상호작용을 strightforward 하게 만들어주는 CommonJS, AMD, UMD 와도 호환이 됩니다.

03.03. Getting Started with Kotlin to Javascript
javascript 를 위한 kotlin 사용을 시작하는 방법을 알기 위해 tutorials 를 참고하세요.

04. Kotlin/Native

04.01. Kotlin/Native
Kotlin/Native 는 Kotlin 을 어떠한 VM 없이 동작하는 native binaries 로 컴파일 하는 기술입니다. 그것은 Kotlin 컴파일러를 위한 LLVM 기반의 백엔드와 Ktlin runtime library 의 native 구현으로 구성됩니다. 최초에 Kotlin/Native 는 virtual machine 이 바람직하지 않거나 가능하지 않는 플랫폼 (예를 들어 iOS 처럼 embeded target) 또는 추가적인 런타임을 요구하지 않는 합리적인 사이즈의 자체 내장 프로그램을 제작하길 원하는 개발자들이 있는 플랫폼을 위해 컴파일 할 수 있도록 설계됐습니다.
Kotlin/Native 는 native code 와 함께 상호운용성을 제공합니다. 플랫폼 libraries 의 경우 해당 interop libraries 를 바로 사용할 수 있습니다. 다른 libraries 의 경우, 모든 C 언어 features 에 대해 완전한 지원을 함으로써 C header file 로부터 interop library 를 생성하는 툴을 제공합니다. macOS 와 iOS 에서 Objective/C 와의 상호운용성 또한 지원됩니다.
Kotlin/Native 는 개발 중에 있습니다. preview releases 를 사용해볼 수 있습니다. Kotlin/Native를 제공하는 IDE 는 CLion 을 위한 plugins 로서 가능합니다.

04.02. Target Platforms
Kotlin/Native 는 현재 다음 플랫폼들을 지원합니다.
- Windows(x86_64 만)
- Linux(x86_64, arm32, MIPS, MIPS little endian)
- MacOS(x86_64)
- iOS(arm64 only)
- Android(arm32 and arm64)
- WebAssembly(wasm32 only)

04.03. Sample Projects
... 생략
